/*
 * Copyright 2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  // TODO: this stuff should go in spinnaker-dependencies module eventually
  ext.kotlinVersion = "1.1.2"
  ext.junitVersion = "1.0.0-M3"
  ext.jupiterVersion = "5.0.0-M3"
  ext.junitLegacyVersion = "4.12.0-M3"
  ext.spekVersion = "1.1.0"

  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "org.junit.platform:junit-platform-gradle-plugin:$junitVersion"
    classpath "com.netflix.nebula:nebula-kotlin-plugin:$kotlinVersion"
  }
}

apply plugin: "nebula.kotlin"
apply plugin: "org.junit.platform.gradle.plugin"


repositories {
  jcenter()
  maven { url "http://dl.bintray.com/jetbrains/spek" }
}

dependencies {
  compile project(":orca-queue")
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7"

  testCompile project(path: ":orca-queue", configuration: "testOutput")
  testCompile "org.junit.platform:junit-platform-runner:$junitVersion"
  testCompile "org.jetbrains.spek:spek-api:$spekVersion"
  testCompile "com.nhaarman:mockito-kotlin:1.4.0"
  testCompile "com.natpryce:hamkrest:1.3.0.0"
  testCompile "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"

  testRuntime "org.junit.platform:junit-platform-launcher:$junitVersion"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
  testRuntime "org.junit.vintage:junit-vintage-engine:$junitLegacyVersion"
  testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
}

configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group == "org.jetbrains.kotlin") {
        details.useVersion kotlinVersion
      }
    }
  }
}

junitPlatform {
  platformVersion junitVersion
  filters {
    engines {
      include "spek"
    }
  }
}

compileKotlin {
  kotlinOptions {
    languageVersion = "1.1"
  }
}
