/*
 * Copyright 2019 Armory, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id("net.ltgt.errorprone") version "1.2.1"
}

apply from: "$rootDir/gradle/kotlin.gradle"
apply from: "$rootDir/gradle/dokka.gradle"
apply from: "$rootDir/gradle/spock.gradle"
apply plugin: "java-library"

sourceSets {
  sample
}

dependencies {
  errorprone("com.google.errorprone:error_prone_core:2.4.0")

  implementation platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")
  annotationProcessor platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")

  api("com.netflix.spinnaker.kork:kork-plugins-api")

  //TODO(jonsie): Remove this dependency
  api("com.netflix.spinnaker.kork:kork-artifacts")

  compileOnly("org.projectlombok:lombok")
  annotationProcessor("org.projectlombok:lombok")

  testRuntimeOnly("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.vintage:junit-vintage-engine")

  dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.4.10")

  sampleImplementation(sourceSets.main.runtimeClasspath)
}

tasks.compileGroovy.enabled = false

tasks.withType(JavaCompile) {
  options.compilerArgs += [
      '-Xlint:all'
  ]
}

test {
  useJUnitPlatform {
    includeEngines "junit-vintage", "junit-jupiter"
  }
}
