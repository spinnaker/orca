/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$rootDir/gradle/groovy.gradle"
apply plugin: 'org.springframework.boot'
apply plugin: 'spinnaker.package'

ext {
  springConfigLocation = System.getProperty('spring.config.location', "${System.getProperty('user.home')}/.spinnaker/")
  repackage = System.getProperty('springBoot.repackage', "false")
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.config.location', project.springConfigLocation)
}

springBoot {
    mainClass = 'com.netflix.spinnaker.orca.Main'
}

dependencies {
  spinnaker.group("bootWeb")

  compile project(":orca-redis")
  compile project(":orca-bakery")
  compile project(":orca-clouddriver")
  compile project(":orca-front50")
  compile project(":orca-applications")
  compile project(":orca-flex")
  compile project(":orca-dry-run")
  compile project(":orca-echo")
  compile project(":orca-kayenta")
  compile project(":orca-mine")
  compile project(":orca-igor")
  compile project(":orca-webhook")
  compile project(":orca-eureka")
  compile project(":orca-queue-redis")
  compile project(":orca-pipelinetemplate")
  compile project(":orca-keel")
  compile project(":orca-qos")

  runtime spinnaker.dependency("kork")
  compile spinnaker.dependency('korkExceptions')
  compile spinnaker.dependency("korkStackdriver")
  compile spinnaker.dependency("korkWeb")
  compile spinnaker.dependency("logstashEncoder")

  spinnaker.group('test')
  testCompile project(":orca-test-groovy")

  //this brings in the jetty GzipFilter which boot will autoconfigure
  runtime 'org.eclipse.jetty:jetty-servlets:9.2.11.v20150529'
}

tasks.bootRepackage.enabled = Boolean.valueOf(project.repackage)

// SHOULDN'T HAVE TO SPECIFY THIS HERE BUT SOMETHING FORCES IT LOWER
configurations.all {
  resolutionStrategy {
    eachDependency {
      if (it.requested.group.startsWith("com.fasterxml.jackson")) {
        it.useVersion spinnaker.version('jackson')
      }
    }
  }
}
